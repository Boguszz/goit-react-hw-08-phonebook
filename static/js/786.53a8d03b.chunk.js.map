{"version":3,"file":"static/js/786.53a8d03b.chunk.js","mappings":"uQAGaA,EAAUC,EAAAA,EAAAA,IAAH,+MAYPC,EAAcD,EAAAA,EAAAA,IAAH,kEAKXE,GAAWF,EAAAA,EAAAA,GAAOG,EAAAA,IAAPH,CAAH,gJAQRI,EAAOJ,EAAAA,EAAAA,EAAH,8EAKJK,EAAgBL,EAAAA,EAAAA,IAAH,kEAKbM,EAASN,EAAAA,EAAAA,EAAH,+CAINO,EAAaP,EAAAA,EAAAA,GAAH,kEAKVQ,EAAaR,EAAAA,EAAAA,GAAH,6FAQVS,EAAST,EAAAA,EAAAA,OAAH,2X,8BCrDNU,EAAWV,EAAAA,EAAAA,IAAH,yJAWRW,EAAeX,EAAAA,EAAAA,IAAH,kZAuBZD,EAAUC,EAAAA,EAAAA,IAAH,8MAWPY,EAAQZ,EAAAA,EAAAA,GAAH,+FAMLS,EAAST,EAAAA,EAAAA,OAAH,8Z,UC/Cba,EAAYC,SAASC,cAAc,eAEzC,SAASC,EAAT,GAA8C,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,OAClCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAAC,GACL,WAAXA,EAAEC,MACJL,KAMJ,OAFAM,OAAOC,iBAAiB,UAAWJ,GAE5B,kBAAMG,OAAOE,oBAAoB,UAAWL,MAClD,CAACH,IAQJ,OAAOS,EAAAA,EAAAA,eACL,SAACjB,EAAD,CAAUkB,QAPY,SAAAN,GAClBA,EAAEO,SAAWP,EAAEQ,eACjBZ,KAKF,UACE,UAACP,EAAD,YACE,UAAC,EAAD,YACE,SAACC,EAAD,UAAQO,KACR,SAAC,EAAD,CAAQY,KAAK,SAASH,QAASV,EAA/B,UACE,SAAC,MAAD,SAGHD,OAGLJ,GAIJG,EAAMgB,UAAY,CAChBf,SAAUgB,IAAAA,QACVf,QAASe,IAAAA,KAAAA,YAGX,QCvCA,I,YAAA,EAPA,SAAsBC,GACpB,OAAkCC,EAAAA,EAAAA,UAASD,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAGA,MAAO,CAAEC,WAFU,kBAAMD,GAAa,SAAAE,GAAS,OAAKA,MAE/BH,UAAAA,ICJVI,EAAOxC,EAAAA,EAAAA,EAAH,oEAKJI,EAAOJ,EAAAA,EAAAA,KAAH,uCAIJyC,EAAOzC,EAAAA,EAAAA,GAAH,qEAKJ0C,GAAO1C,EAAAA,EAAAA,GAAH,6FAQJ2C,GAAe3C,EAAAA,EAAAA,OAAH,+ZAsBZ4C,GAAe5C,EAAAA,EAAAA,OAAH,4Y,uDC/BzB,SAAS6C,GAAT,GAAoD,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,KAAMT,EAAc,EAAdA,WAC7BU,GAAWC,EAAAA,GAAAA,MACXC,GAAWC,EAAAA,GAAAA,MACjB,GAAmDC,EAAAA,GAAAA,MAAnD,eAAOC,EAAP,KAAmCC,EAAnC,KAAwBC,UAUxB,OACE,iCACE,UAACf,EAAD,yDAC4C,SAAC,EAAD,UAAOO,IADnD,QAGA,UAACN,EAAD,YACE,SAACC,GAAD,WACE,SAACC,GAAD,CAAcZ,KAAK,SAASH,QAASU,EAArC,uBAIF,SAACI,GAAD,WACE,SAACE,GAAD,CAAcb,KAAK,SAASH,QApBN,WAC5ByB,EAAcP,GACdI,GAASM,EAAAA,GAAAA,GAAgB,CAAEV,GAAAA,EAAIC,KAAAA,KAC/BC,EAAS,aACTV,IACAmB,GAAAA,OAAAA,QAAA,cAAsBV,EAAtB,+CAeM,SACGO,EAAa,MAAQ,mBAQlCT,GAAgBb,UAAY,CAC1Bc,GAAIb,IAAAA,OAAAA,WACJc,KAAMd,IAAAA,OAAAA,WACNK,WAAYL,IAAAA,KAAAA,YAGd,U,WCjCA,SAASyB,GAAT,GAAwC,IAArBZ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,KAAMY,EAAU,EAAVA,OAC3B,GAAsCxB,EAAAA,EAAAA,WAAS,GAA/C,eAAOyB,EAAP,KAAoBC,EAApB,KAEA,EAAkCC,GAAa,GAAvC1B,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,WACXyB,GAAcC,EAAAA,GAAAA,KAAY,SAAAC,GAAK,OAAIC,EAAAA,GAAAA,GAAiBD,MAApDF,WAER3C,EAAAA,EAAAA,YAAU,WACRyC,EAAeE,EAAUI,MAAK,SAAAC,GAAO,OAAIA,EAAQtB,KAAOA,QACvD,CAACiB,EAAWjB,IAEf,IAAME,GAAWC,EAAAA,GAAAA,MACXC,GAAWC,EAAAA,GAAAA,MAQjB,OACE,gCACGf,IACC,SAAC,EAAD,CAAOlB,QAASoB,EAAYnB,MAAO4B,EAAnC,UACE,SAAC,GAAD,CAAiBD,GAAIA,EAAIC,KAAMA,EAAMT,WAAYA,OAIrD,UAACvC,EAAD,YACE,UAACE,EAAD,YACE,SAACC,EAAD,KACA,SAACE,EAAD,UAAO2C,QAET,SAAC1C,EAAD,WACE,UAACE,EAAD,YACE,SAAC,EAAD,UAASoD,KACT,SAACnD,EAAD,WACE,SAACC,EAAD,CAAQsB,KAAK,SAASH,QAASU,EAA/B,UACE,SAAC,MAAD,SAGJ,SAAC9B,EAAD,WACE,SAACC,EAAD,CAAQsB,KAAK,SAASH,QAAS,kBAAMoB,EAAS,QAAD,OAASF,KAAtD,UACE,SAAC,MAAD,SAGJ,SAACtC,EAAD,WACE,SAACC,EAAD,CAAQsB,KAAK,SAASH,QAjCL,WAC3B,IAAMyC,EAAkB,CAAEvB,GAAAA,EAAIC,KAAAA,EAAMY,OAAAA,GAEpCT,GAASM,EAAAA,GAAAA,GAAgBa,KA8Bf,UACE,SAAC,MAAD,CAAQC,MAAOV,EAAc,UAAY,2BAUzDF,GAAQ1B,UAAY,CAClBc,GAAIb,IAAAA,OAAAA,WACJc,KAAMd,IAAAA,OAAAA,WACN0B,OAAQ1B,IAAAA,OAAAA,YAGV,W,gFCnFalC,EAAUC,EAAAA,EAAAA,IAAH,+CAIPwC,EAAOxC,EAAAA,EAAAA,EAAH,iE,UCIjB,MARA,YAA+B,IAAZuE,EAAW,EAAXA,QACjB,OACE,SAACxE,EAAD,WACE,SAACyC,EAAD,UAAO+B,Q,mHCHAC,EAAQxE,EAAAA,EAAAA,MAAH,uHAQLwC,EAAOxC,EAAAA,EAAAA,EAAH,sGAMJyE,EAAQzE,EAAAA,EAAAA,MAAH,8V,oBCIlB,I,IAAA,EAhBA,WACE,IAAMkD,GAAWC,EAAAA,EAAAA,MAOjB,OACE,UAACqB,EAAD,YACE,SAAChC,EAAD,qCACA,SAACiC,EAAD,CAAO1C,KAAK,OAAO2C,SARG,SAAApD,GACxB,IAAMqD,EAAQrD,EAAEQ,cAAc6C,MAC9BzB,GAAS0B,EAAAA,EAAAA,IAAaD,KAM4B5B,KAAK,e,UCb9CN,EAAOzC,EAAAA,EAAAA,GAAH,sBAEJ0C,EAAO1C,EAAAA,EAAAA,GAAH,gD,wCCsCjB,I,IAAA,EAlCA,WACE,OAA8C6E,EAAAA,EAAAA,MAAhCC,EAAd,EAAQC,KAAgBC,EAAxB,EAAwBA,WAAYC,EAApC,EAAoCA,MAC5BC,GAAWlB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIkB,EAAAA,EAAAA,GAAUlB,MAA1CiB,OAYFE,EAVkB,WACtB,IAAMC,EAAmBH,EAAOI,cAChC,OACER,GACAA,EAASI,QAAO,SAAAd,GAAO,OACrBA,EAAQrB,KAAKuC,cAAcC,SAASF,MAKdG,GAE5B,OACE,gCACGR,IAAc,SAACS,EAAA,EAAD,IACdR,IAAS,SAACS,EAAA,EAAD,CAAUX,KAAME,EAAMF,KAAMY,OAAQV,EAAMU,UACpD,SAAClD,EAAD,UACGqC,GACCM,EAAoBQ,KAAI,YAA2B,IAAxB9C,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMY,EAAa,EAAbA,OACnC,OACE,SAACjB,EAAD,WACE,SAACgB,EAAA,EAAD,CAASZ,GAAIA,EAAIC,KAAMA,EAAMY,OAAQA,KAD5Bb,Y,oBC7BZrC,GAAST,EAAAA,EAAAA,GAAO6F,EAAAA,GAAP7F,CAAH,ubAuBN8F,EAAa9F,EAAAA,EAAAA,KAAH,+C,UCdvB,MATA,WACE,OACE,UAACS,EAAD,CAAQsF,GAAG,gBAAX,WACE,SAACD,EAAD,+BACA,SAAC,MAAD,CAAsBE,KAAM,SCgBlC,MAhBA,WACE,IAAQjB,GAASF,EAAAA,EAAAA,MAATE,KAER,OACE,UAACkB,EAAA,EAAD,CAAW9E,MAAM,WAAjB,WACE,SAAC,EAAD,KACA,SAAC,EAAD,IACC4D,GAAQA,EAAKmB,OAAS,GACrB,SAAC,EAAD,KAEA,SAACC,EAAA,EAAD,CAAS5B,QAAQ,gC,4ECjBlB,IAAMY,EAAY,SAAAlB,GAAK,OAAIA,EAAMa,UAE3BZ,EAAmB,SAAAD,GAAK,OAAIA,EAAMa","sources":["components/Contact/Contact.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","hooks/useShowModal.js","components/DeletingContact/DeletingContact.styled.js","components/DeletingContact/DeletingContact.jsx","components/Contact/Contact.jsx","components/Message/Message.styled.js","components/Message/Message.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/AddButton/AddButton.styled.js","components/AddButton/AddButton.jsx","pages/ContactsPage.jsx","redux/contacts/contact-selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { FaUser } from 'react-icons/fa';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 10px;\n\n  background-color: #fafafa;\n  border-radius: 10px;\n  border: 1px solid #f2f2f2;\n`;\n\nexport const NameWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const IconUser = styled(FaUser)`\n  background-color: var(--accent-bg-color);\n  color: var(--main-bg-color);\n\n  margin-right: 30px;\n  padding: 10px;\n`;\n\nexport const Name = styled.p`\n  font-size: 18px;\n  color: var(--main-text-color);\n`;\n\nexport const NumberWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Number = styled.p`\n  margin-right: 30px;\n`;\n\nexport const ButtonList = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ButtonItem = styled.li`\n  margin-right: 5px;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 40px;\n  height: 30px;\n  padding: 10px;\n\n  border: none;\n  background-color: transparent;\n  color: var(--accent-bg-color);\n\n  cursor: pointer;\n  transition: color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    color: var(--second-bg-color);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100vw;\n  height: 100vh;\n\n  background-color: var(--backdrop-bg-color);\n`;\n\nexport const ModalWrapper = styled.div`\n  position: relative;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  width: 280px;\n  height: auto;\n  padding: 10px;\n\n  background-color: var(--main-bg-color);\n  color: var(--main-text-color);\n\n  @media screen and (min-width: 768px) {\n    width: 600px;\n    padding: 30px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 50px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  border-bottom: 1px solid var(--accent-bg-color);\n\n  margin-bottom: 35px;\n  padding-bottom: 25px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 900;\n  text-transform: uppercase;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 40px;\n  height: 40px;\n\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { Backdrop, ModalWrapper, Wrapper, Title, Button } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ children, onClose, title }) {\n  useEffect(() => {\n    const onPessKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', onPessKeyDown);\n\n    return () => window.removeEventListener('keydown', onPessKeyDown);\n  }, [onClose]);\n\n  const onBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={onBackdropClick}>\n      <ModalWrapper>\n        <Wrapper>\n          <Title>{title}</Title>\n          <Button type=\"button\" onClick={onClose}>\n            <AiOutlineClose />\n          </Button>\n        </Wrapper>\n        {children}\n      </ModalWrapper>\n    </Backdrop>,\n    modalRoot,\n  );\n}\n\nModal.prototype = {\n  children: PropTypes.element,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import { useState } from 'react';\n\nfunction useShowModal(option) {\n  const [showModal, setShowModal] = useState(option);\n  const togleModal = () => setShowModal(prevState => !prevState);\n\n  return { togleModal, showModal };\n}\n\nexport default useShowModal;\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  font-size: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const Name = styled.span`\n  color: red;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: right;\n`;\n\nexport const Item = styled.li`\n  margin-right: 10px;\n\n  :last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const ButtonCancel = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100px;\n  height: 30px;\n\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100px;\n  height: 30px;\n\n  background-color: red;\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n","import {\n  Text,\n  Name,\n  List,\n  Item,\n  ButtonCancel,\n  ButtonDelete,\n} from './DeletingContact.styled';\nimport { useDeleteContactMutation } from 'redux/contacts/contact-api';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { toggleFavorites } from 'redux/contacts/contacts-slice';\n\nfunction DeletingContact({ id, name, togleModal }) {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const deleteSelectedContact = () => {\n    deleteContact(id);\n    dispatch(toggleFavorites({ id, name }));\n    navigate('/contacts');\n    togleModal();\n    Notify.success(`The ${name} has been removed from your contact list.`);\n  };\n\n  return (\n    <>\n      <Text>\n        Are you sure you want to delete a contact <Name>{name}</Name>?\n      </Text>\n      <List>\n        <Item>\n          <ButtonCancel type=\"button\" onClick={togleModal}>\n            Cancel\n          </ButtonCancel>\n        </Item>\n        <Item>\n          <ButtonDelete type=\"button\" onClick={deleteSelectedContact}>\n            {isDeleting ? '...' : 'Delete'}\n          </ButtonDelete>\n        </Item>\n      </List>\n    </>\n  );\n}\n\nDeletingContact.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  togleModal: PropTypes.func.isRequired,\n};\n\nexport default DeletingContact;\n","import PropTypes from 'prop-types';\nimport { FaTrash, FaUserEdit, FaStar } from 'react-icons/fa';\nimport {\n  NameWrapper,\n  Wrapper,\n  IconUser,\n  Name,\n  NumberWrapper,\n  Number,\n  ButtonList,\n  ButtonItem,\n  Button,\n} from './Contact.styled';\nimport Modal from 'components/Modal';\nimport useShowModal from 'hooks/useShowModal';\nimport DeletingContact from 'components/DeletingContact';\nimport { useNavigate } from 'react-router-dom';\nimport { toggleFavorites } from 'redux/contacts/contacts-slice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFavoritesList } from 'redux/contacts/contact-selectors';\nimport { useState, useEffect } from 'react';\n\nfunction Contact({ id, name, number }) {\n  const [isFavorites, setIsFavorites] = useState(false);\n\n  const { showModal, togleModal } = useShowModal(false);\n  const { favorites } = useSelector(state => getFavoritesList(state));\n\n  useEffect(() => {\n    setIsFavorites(favorites.some(contact => contact.id === id));\n  }, [favorites, id]);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const addContactToFavorite = () => {\n    const favoriteContact = { id, name, number };\n\n    dispatch(toggleFavorites(favoriteContact));\n  };\n\n  return (\n    <>\n      {showModal && (\n        <Modal onClose={togleModal} title={name}>\n          <DeletingContact id={id} name={name} togleModal={togleModal} />\n        </Modal>\n      )}\n\n      <Wrapper>\n        <NameWrapper>\n          <IconUser />\n          <Name>{name}</Name>\n        </NameWrapper>\n        <NumberWrapper>\n          <ButtonList>\n            <Number>{number}</Number>\n            <ButtonItem>\n              <Button type=\"button\" onClick={togleModal}>\n                <FaTrash />\n              </Button>\n            </ButtonItem>\n            <ButtonItem>\n              <Button type=\"button\" onClick={() => navigate(`edit/${id}`)}>\n                <FaUserEdit />\n              </Button>\n            </ButtonItem>\n            <ButtonItem>\n              <Button type=\"button\" onClick={addContactToFavorite}>\n                <FaStar color={isFavorites ? '#f0a70a' : '#0084ff'} />\n              </Button>\n            </ButtonItem>\n          </ButtonList>\n        </NumberWrapper>\n      </Wrapper>\n    </>\n  );\n}\n\nContact.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 25px;\n`;\n","import { Wrapper, Text } from './Message.styled';\n\nfunction Message({ message }) {\n  return (\n    <Wrapper>\n      <Text>{message}</Text>\n    </Wrapper>\n  );\n}\n\nexport default Message;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-bottom: 50px;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled.input`\n  width: 95%;\n  height: 40px;\n  padding: 0 10px 0 10px;\n\n  border: 1px solid var(--second-bg-color);\n  outline: none;\n\n  color: var(--main-text-color);\n  font-size: 14px;\n\n  :focus {\n    border-color: var(--accent-bg-color);\n  }\n\n  ::placeholder {\n    font-size: 12px;\n    color: var(--main-text-color);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Label, Text, Input } from './Filter.styled';\nimport { changeFilter } from 'redux/contacts/contacts-slice';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const changeFieldFilter = e => {\n    const value = e.currentTarget.value;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <Label>\n      <Text>Find contacts by name</Text>\n      <Input type=\"text\" onChange={changeFieldFilter} name=\"filter\" />\n    </Label>\n  );\n}\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul``;\n\nexport const Item = styled.li`\n  margin-bottom: 20px;\n`;\n","import { useSelector } from 'react-redux';\nimport Contact from 'components/Contact/Contact';\nimport { List, Item } from './ContactList.styled';\nimport Loader from 'components/Loader';\nimport { useGetContactsQuery } from 'redux/contacts/contact-api';\nimport NotFound from 'components/NotFound';\nimport { getFilter } from 'redux/contacts/contact-selectors';\n\nfunction ContactList() {\n  const { data: contacts, isFetching, error } = useGetContactsQuery();\n  const { filter } = useSelector(state => getFilter(state));\n\n  const filtredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return (\n      contacts &&\n      contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n      )\n    );\n  };\n\n  const filteredContactList = filtredContacts();\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      {error && <NotFound data={error.data} status={error.status} />}\n      <List>\n        {contacts &&\n          filteredContactList.map(({ id, name, number }) => {\n            return (\n              <Item key={id}>\n                <Contact id={id} name={name} number={number} />\n              </Item>\n            );\n          })}\n      </List>\n    </>\n  );\n}\n\nexport default ContactList;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 270px;\n  height: 40px;\n  margin-bottom: 50px;\n\n  background-color: var(--accent-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--second-bg-color);\n  }\n`;\n\nexport const ButtonText = styled.span`\n  margin-right: 10px;\n`;\n","import { Button, ButtonText } from './AddButton.styled';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\n\nfunction AddButton() {\n  return (\n    <Button to=\"/contacts/add\">\n      <ButtonText>Add new contact</ButtonText>\n      <BsFillPersonPlusFill size={20} />\n    </Button>\n  );\n}\n\nexport default AddButton;\n","import Container from 'components/Container';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport Message from 'components/Message';\nimport { useGetContactsQuery } from 'redux/contacts/contact-api';\nimport AddButton from 'components/AddButton';\n\nfunction ContactsPage() {\n  const { data } = useGetContactsQuery();\n\n  return (\n    <Container title=\"Contacts\">\n      <AddButton />\n      <Filter />\n      {data && data.length > 0 ? (\n        <ContactList />\n      ) : (\n        <Message message=\"Contact list is empty.\" />\n      )}\n    </Container>\n  );\n}\n\nexport default ContactsPage;\n","export const getFilter = state => state.contacts;\n\nexport const getFavoritesList = state => state.contacts;\n"],"names":["Wrapper","styled","NameWrapper","IconUser","FaUser","Name","NumberWrapper","Number","ButtonList","ButtonItem","Button","Backdrop","ModalWrapper","Title","modalRoot","document","querySelector","Modal","children","onClose","title","useEffect","onPessKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","onClick","target","currentTarget","type","prototype","PropTypes","option","useState","showModal","setShowModal","togleModal","prevState","Text","List","Item","ButtonCancel","ButtonDelete","DeletingContact","id","name","navigate","useNavigate","dispatch","useDispatch","useDeleteContactMutation","deleteContact","isDeleting","isLoading","toggleFavorites","Notify","Contact","number","isFavorites","setIsFavorites","useShowModal","favorites","useSelector","state","getFavoritesList","some","contact","favoriteContact","color","message","Label","Input","onChange","value","changeFilter","useGetContactsQuery","contacts","data","isFetching","error","filter","getFilter","filteredContactList","normalizedFilter","toLowerCase","includes","filtredContacts","Loader","NotFound","status","map","Link","ButtonText","to","size","Container","length","Message"],"sourceRoot":""}