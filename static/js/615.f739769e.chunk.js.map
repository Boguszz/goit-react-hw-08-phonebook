{"version":3,"file":"static/js/615.f739769e.chunk.js","mappings":"qOAEaA,EAASC,EAAAA,EAAAA,OAAH,sbAsBNC,EAAQD,EAAAA,EAAAA,KAAH,8C,oBCnBlB,SAASE,EAAT,GAAiC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAChBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,UAACP,EAAD,CAAQQ,KAAK,SAASC,QAHP,kBAAMH,EAASD,IAG9B,WACE,SAAC,MAAD,KACA,SAACH,EAAD,UAAQE,OAKdD,EAAOO,UAAY,CACjBC,MAAOC,IAAAA,OACPP,KAAMO,IAAAA,QAGR,S,0ICnBaC,EAAYZ,EAAAA,EAAAA,GAAH,mGAMTC,EAAQD,EAAAA,EAAAA,MAAH,6FAMLa,EAAQb,EAAAA,EAAAA,KAAH,sGAMLc,GAAcd,EAAAA,EAAAA,GAAOe,EAAAA,GAAPf,CAAH,uWAqBXD,EAASC,EAAAA,EAAAA,OAAH,me,4DCkDnB,MA3EA,WACE,IAAQgB,GAAcC,EAAAA,EAAAA,MAAdD,UACFX,GAAWC,EAAAA,EAAAA,MAEjB,GAAmDY,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,KAAmCC,EAAnC,KAAwBC,UACVC,GAAaC,EAAAA,EAAAA,MAAnBC,KAEFC,EAAiBH,EAASI,MAAK,SAAAC,GAAO,OAAIA,EAAQC,KAAOZ,KAY3Da,EAAgB,KAChBP,IACFO,EAAgB,CACdC,KAAML,EAAeK,KACrBC,OAAQN,EAAeM,SAI3B,IAAMC,EAAgBC,EAAAA,GAAW,CAC/BH,KAAMG,EAAAA,KAAaC,WAAWC,IAAI,GAAGC,IAAI,IACzCL,OAAQE,EAAAA,KAAaC,aAGvB,OACEZ,IACE,SAAC,KAAD,CACEO,cAAeA,EACfQ,SA3Be,SAAAC,GACfC,KAAKC,UAAUF,KAAYC,KAAKC,UAAUX,IAI9CV,GAAc,QAAEH,UAAAA,GAAcsB,IAC9BjC,EAAS,aACToC,EAAAA,OAAAA,QAAe,+CALbA,EAAAA,OAAAA,QAAe,mCA0BbC,iBAAkBV,EAHpB,SAKG,gBAAGM,EAAH,EAAGA,OAAQK,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,aAAzB,OACC,iCACE,SAAChC,EAAD,iCAA4Ba,EAAeK,SAC3C,SAAC5B,EAAA,EAAD,CAAQC,KAAK,eAAeC,KAAK,eACjC,UAAC,KAAD,CAAMiC,SAAUO,EAAhB,WACE,UAAC3C,EAAD,YACE,SAACY,EAAD,oBACA,SAACC,EAAD,CACEP,KAAK,OACLuB,KAAK,OACLe,SAAUF,EACVG,MAAOR,EAAOR,QAEhB,SAAC,KAAD,CAAcA,KAAK,OAAOiB,UAAU,YAEtC,UAAC9C,EAAD,YACE,SAACY,EAAD,sBACA,SAACC,EAAD,CACEP,KAAK,MACLuB,KAAK,SACLe,SAAUF,EACVG,MAAOR,EAAOP,UAEhB,SAAC,KAAD,CAAcD,KAAK,SAASiB,UAAU,YAExC,SAAChD,EAAD,CAAQQ,KAAK,SAAb,SACGa,EAAa,MAAQ,6BCvEtC,MARA,WACE,OACE,SAAC4B,EAAA,EAAD,WACE,SAAC,EAAD","sources":["components/GoBack/GoBack.styled.js","components/GoBack/GoBack.jsx","components/ChangeContactForm/ChangeContactForm.styled.js","components/ChangeContactForm/ChangeContactForm.jsx","pages/ChangeContactPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-bottom: 30px;\n  padding: 10px 25px 10px 25px;\n\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n\nexport const Label = styled.span`\n  margin-left: 10px;\n`;\n","import propTypes from 'prop-types';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\nimport { Button, Label } from './GoBack.styled';\nimport { useNavigate } from 'react-router-dom';\n\nfunction GoBack({ text, path }) {\n  const navigate = useNavigate();\n  const goToPage = () => navigate(path);\n\n  return (\n    <Button type=\"button\" onClick={goToPage}>\n      <FaLongArrowAltLeft />\n      <Label>{text}</Label>\n    </Button>\n  );\n}\n\nGoBack.prototype = {\n  label: propTypes.string,\n  path: propTypes.string,\n};\n\nexport default GoBack;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const MainTitle = styled.h2`\n  margin-bottom: 30px;\n  text-transform: uppercase;\n  font-weight: 900;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.span`\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 5px;\n`;\n\nexport const StyledField = styled(Field)`\n  height: 40px;\n  padding: 0 10px 0 10px;\n\n  border: none;\n  border-bottom: 1px solid var(--second-bg-color);\n  outline: none;\n\n  color: var(--main-text-color);\n  font-size: 14px;\n\n  :focus {\n    border-color: var(--accent-bg-color);\n  }\n\n  ::placeholder {\n    font-size: 12px;\n    color: var(--main-text-color);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 200px;\n  height: 40px;\n\n  background-color: var(--accent-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--second-bg-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport {\n  MainTitle,\n  Label,\n  Title,\n  StyledField,\n  Button,\n} from './ChangeContactForm.styled';\nimport {\n  useChangeContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contact-api';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport * as yup from 'yup';\nimport GoBack from 'components/GoBack';\n\nfunction ChangeContactForm() {\n  const { contactId } = useParams();\n  const navigate = useNavigate();\n\n  const [chengeContact, { isLoading: isUpdating }] = useChangeContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const currentContact = contacts.find(contact => contact.id === contactId);\n\n  const onSubmitForm = values => {\n    if (JSON.stringify(values) === JSON.stringify(initialValues)) {\n      Notify.warning('Try to change something first.');\n      return;\n    }\n    chengeContact({ contactId, ...values });\n    navigate('/contacts');\n    Notify.success('The contact has been successfully changed.');\n  };\n\n  let initialValues = null;\n  if (contacts) {\n    initialValues = {\n      name: currentContact.name,\n      number: currentContact.number,\n    };\n  }\n\n  const contactSchema = yup.object({\n    name: yup.string().required().min(3).max(30),\n    number: yup.number().required(),\n  });\n\n  return (\n    contacts && (\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmitForm}\n        validationSchema={contactSchema}\n      >\n        {({ values, handleChange, handleSubmit }) => (\n          <>\n            <MainTitle>{`Edit Contact ${currentContact.name}`}</MainTitle>\n            <GoBack text=\"Contact list\" path=\"/contacts\" />\n            <Form onSubmit={handleSubmit}>\n              <Label>\n                <Title>Name</Title>\n                <StyledField\n                  type=\"text\"\n                  name=\"name\"\n                  onChange={handleChange}\n                  value={values.name}\n                />\n                <ErrorMessage name=\"name\" component=\"div\" />\n              </Label>\n              <Label>\n                <Title>Number</Title>\n                <StyledField\n                  type=\"tel\"\n                  name=\"number\"\n                  onChange={handleChange}\n                  value={values.number}\n                />\n                <ErrorMessage name=\"number\" component=\"div\" />\n              </Label>\n              <Button type=\"submit\">\n                {isUpdating ? '...' : 'Change contact'}\n              </Button>\n            </Form>\n          </>\n        )}\n      </Formik>\n    )\n  );\n}\n\nexport default ChangeContactForm;\n","import Container from 'components/Container';\nimport ChangeContactForm from 'components/ChangeContactForm';\n\nfunction ChangeContactPage() {\n  return (\n    <Container>\n      <ChangeContactForm />\n    </Container>\n  );\n}\n\nexport default ChangeContactPage;\n"],"names":["Button","styled","Label","GoBack","text","path","navigate","useNavigate","type","onClick","prototype","label","propTypes","MainTitle","Title","StyledField","Field","contactId","useParams","useChangeContactMutation","chengeContact","isUpdating","isLoading","contacts","useGetContactsQuery","data","currentContact","find","contact","id","initialValues","name","number","contactSchema","yup","required","min","max","onSubmit","values","JSON","stringify","Notify","validationSchema","handleChange","handleSubmit","onChange","value","component","Container"],"sourceRoot":""}