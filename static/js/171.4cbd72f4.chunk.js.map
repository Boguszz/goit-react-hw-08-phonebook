{"version":3,"file":"static/js/171.4cbd72f4.chunk.js","mappings":"qOAEaA,EAASC,EAAAA,EAAAA,OAAH,sbAsBNC,EAAQD,EAAAA,EAAAA,KAAH,8C,oBCnBlB,SAASE,EAAT,GAAiC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAChBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,UAACP,EAAD,CAAQQ,KAAK,SAASC,QAHP,kBAAMH,EAASD,IAG9B,WACE,SAAC,MAAD,KACA,SAACH,EAAD,UAAQE,OAKdD,EAAOO,UAAY,CACjBC,MAAOC,IAAAA,OACPP,KAAMO,IAAAA,QAGR,S,gICnBaC,EAAYZ,EAAAA,EAAAA,GAAH,mGAMTC,EAAQD,EAAAA,EAAAA,MAAH,6FAMLa,EAAQb,EAAAA,EAAAA,KAAH,sGAMLc,GAAcd,EAAAA,EAAAA,GAAOe,EAAAA,GAAPf,CAAH,+UAoBXD,EAASC,EAAAA,EAAAA,OAAH,me,sEC2CnB,MAlEA,WACE,IAAMK,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBU,EAAAA,EAAAA,MAAjBC,GAAP,eACcC,GAAaC,EAAAA,EAAAA,MAAnBC,KAgBFC,EAAgBC,EAAAA,GAAW,CAC/BC,KAAMD,EAAAA,KAAaE,WAAWC,IAAI,GAAGC,IAAI,IACzCC,OAAQL,EAAAA,KAAaE,aAGvB,OACE,iCACE,SAACZ,EAAD,+BACA,SAACV,EAAA,EAAD,CAAQC,KAAK,eAAeC,KAAK,eACjC,SAAC,KAAD,CACEwB,cAAe,CAAEL,KAAM,GAAII,OAAQ,IACnCE,SAzBe,SAAC,GAAsB,IAApBN,EAAmB,EAAnBA,KAAMI,EAAa,EAAbA,OAC5BT,EAASY,MAAK,SAAAC,GAAO,OAAIA,EAAQR,OAASA,KACtCS,EAAAA,OAAAA,QAAA,UACKT,GACH,4CACA,MAEFN,EAAc,CAAEM,KAAAA,EAAMI,OAAAA,IAE1BtB,EAAS,aAET4B,EAAAA,OAAAA,QAAA,cAAsBV,EAAtB,2CAeIW,iBAAkBb,EAHpB,SAKG,gBAAGc,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,aAAcC,EAAvC,EAAuCA,aAAvC,OACC,UAAC,KAAD,CAAMT,SAAUQ,EAAhB,WACE,UAACpC,EAAD,YACE,SAACY,EAAD,oBACA,SAACC,EAAD,CACEP,KAAK,OACLgB,KAAK,OACLgB,SAAUH,EACVI,MAAOL,EAAOZ,QAEhB,SAAC,KAAD,CAAcA,KAAK,OAAOkB,UAAU,YAEtC,UAACxC,EAAD,YACE,SAACY,EAAD,sBACA,SAACC,EAAD,CACEP,KAAK,MACLgB,KAAK,SACLgB,SAAUH,EACVI,MAAOL,EAAOR,UAEhB,SAAC,KAAD,CAAcJ,KAAK,SAASkB,UAAU,YAExC,SAAC1C,EAAD,CAAQQ,KAAK,SAASmC,SAAUJ,EAAhC,mCC/DZ,MARA,WACE,OACE,SAACK,EAAA,EAAD,WACE,SAAC,EAAD","sources":["components/GoBack/GoBack.styled.js","components/GoBack/GoBack.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/AddContactPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-bottom: 30px;\n  padding: 10px 25px 10px 25px;\n\n  background-color: var(--second-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--accent-bg-color);\n  }\n`;\n\nexport const Label = styled.span`\n  margin-left: 10px;\n`;\n","import propTypes from 'prop-types';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\nimport { Button, Label } from './GoBack.styled';\nimport { useNavigate } from 'react-router-dom';\n\nfunction GoBack({ text, path }) {\n  const navigate = useNavigate();\n  const goToPage = () => navigate(path);\n\n  return (\n    <Button type=\"button\" onClick={goToPage}>\n      <FaLongArrowAltLeft />\n      <Label>{text}</Label>\n    </Button>\n  );\n}\n\nGoBack.prototype = {\n  label: propTypes.string,\n  path: propTypes.string,\n};\n\nexport default GoBack;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const TitlePage = styled.h2`\n  margin-bottom: 30px;\n  text-transform: uppercase;\n  font-weight: 900;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.span`\n  font-weight: 600;\n  color: var(--main-text-color);\n  margin-bottom: 5px;\n`;\n\nexport const StyledField = styled(Field)`\n  height: 40px;\n  padding: 0 10px 0 10px;\n\n  border: 1px solid var(--second-bg-color);\n  outline: none;\n\n  color: var(--main-text-color);\n  font-size: 14px;\n\n  :focus {\n    border-color: var(--accent-bg-color);\n  }\n\n  ::placeholder {\n    font-size: 12px;\n    color: var(--main-text-color);\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 200px;\n  height: 40px;\n\n  background-color: var(--accent-bg-color);\n  color: var(--second-text-color);\n  font-family: inherit;\n  border: none;\n\n  cursor: pointer;\n  transition: background-color var(--main-hover-animation);\n\n  :hover,\n  :focus {\n    background-color: var(--second-bg-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\n","import {\n  TitlePage,\n  Label,\n  Title,\n  StyledField,\n  Button,\n} from './ContactForm.styled';\nimport {\n  useCreateContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contact-api';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { Report } from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport GoBack from 'components/GoBack';\n\nfunction ContactForm() {\n  const navigate = useNavigate();\n\n  const [createContact] = useCreateContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n\n  const onSubmitForm = ({ name, number }) => {\n    contacts.some(contact => contact.name === name)\n      ? Report.warning(\n          `${name}`,\n          'This user is already in the contact list.',\n          'OK',\n        )\n      : createContact({ name, number });\n\n    navigate('/contacts');\n\n    Notify.success(`The ${name} has been added to your contact list.`);\n  };\n\n  const contactSchema = yup.object({\n    name: yup.string().required().min(3).max(30),\n    number: yup.number().required(),\n  });\n\n  return (\n    <>\n      <TitlePage>Add new contact</TitlePage>\n      <GoBack text=\"Contact list\" path=\"/contacts\" />\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        onSubmit={onSubmitForm}\n        validationSchema={contactSchema}\n      >\n        {({ values, handleChange, handleSubmit, isSubmitting }) => (\n          <Form onSubmit={handleSubmit}>\n            <Label>\n              <Title>Name</Title>\n              <StyledField\n                type=\"text\"\n                name=\"name\"\n                onChange={handleChange}\n                value={values.name}\n              />\n              <ErrorMessage name=\"name\" component=\"div\" />\n            </Label>\n            <Label>\n              <Title>Number</Title>\n              <StyledField\n                type=\"tel\"\n                name=\"number\"\n                onChange={handleChange}\n                value={values.number}\n              />\n              <ErrorMessage name=\"number\" component=\"div\" />\n            </Label>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Add contact\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport default ContactForm;\n","import Container from 'components/Container';\nimport ContactForm from 'components/ContactForm';\n\nfunction AddContactPage() {\n  return (\n    <Container>\n      <ContactForm />\n    </Container>\n  );\n}\n\nexport default AddContactPage;\n"],"names":["Button","styled","Label","GoBack","text","path","navigate","useNavigate","type","onClick","prototype","label","propTypes","TitlePage","Title","StyledField","Field","useCreateContactMutation","createContact","contacts","useGetContactsQuery","data","contactSchema","yup","name","required","min","max","number","initialValues","onSubmit","some","contact","Report","Notify","validationSchema","values","handleChange","handleSubmit","isSubmitting","onChange","value","component","disabled","Container"],"sourceRoot":""}